name: Create SDK Snapshot

on:
  pull_request:
    branches: ['master']

  # Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: ü§ò Checkout
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: üîê Authenticate with NPM
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: üß© Install dependencies
        run: npm ci --ignore-scripts

      - name: üñäÔ∏è Bump version
        run: npm run changeset:snapshot -- --pr $PR --sha $COMMIT_SHA --output release-plan.json
        env:
          PR: ${{ github.event.pull_request.number }}
          COMMIT_SHA: ${{ github.event.pull_request.head.sha }}

      - name: üõ†Ô∏è Build SDK
        run: npm run build

      - name: üöÄ Publish snapshot
        run: npm run changeset -- publish --no-git-tag --snapshot --tag beta

      - name: ‚úÖ Verify release plan
        id: verify
        run: |
          cat release-plan.json
          if [ $(jq '.releases | length' release-plan.json) -eq 0 ]; then
            echo "No new releases available :("
          else
            echo "run_ui_upgrade=yes" >> $GITHUB_OUTPUT
          fi

      - name: ‚¨ÜÔ∏è Upload release plan
        uses: actions/upload-artifact@v4
        with:
          name: release-plan
          path: release-plan.json

    outputs:
      run_ui_upgrade: ${{ steps.verify.outputs.run_ui_upgrade }}

  ui-upgrade:
    needs:
      - release
    if: needs.release.outputs.run_ui_upgrade == 'yes'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: ‚¨áÔ∏è Download release plan
        uses: actions/download-artifact@v4
        with:
          name: release-plan
      - name: ü§ò Checkout hydration-ui repository
        uses: actions/checkout@v4
        with:
          repository: 'galacticcouncil/hydration-ui'
          token: ${{ secrets.TARGET_REPO_PAT }}
          path: 'hydration-ui'
      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: üñäÔ∏è Bump versions
        run: |
          cd hydration-ui
          jq -c '.releases[]' ../release-plan.json | while read i; do
            package_name=$(jq --raw-output '.name' <<< "$i")
            package_version=$(jq --raw-output '.newVersion' <<< "$i")
            echo $package_name
            echo $package_version
            yarn add $package_name@$package_version
          done
          RELEASE_MESSAGE=$(jq '.releaseMessage' ../release-plan.json)
          echo $RELEASE_MESSAGE
          cat package.json
